/*leetcode-560-Subarray Sum Equals K
Given an array of integers and an integer k, you need to find the total number of continuous subarrays whose sum equals to k.
Example 1:
Input:nums = [1,1,1], k = 2
Output: 2
Note:
The length of the array is in range [1, 20,000].
The range of numbers in the array is [-1000, 1000] and the range of the integer k is [-1e7, 1e7].*/
 int subarraySum(vector<int>& nums, int k)
  {
      int n = nums.size();
      vector<int >sum(n+1);//记录累加和
      for(int i =1;i<=n;i++)
      {
          sum[i] = sum[i-1]+nums[i-1];
      }
      map<int ,int > H;
      H[0] = 1;
      int ret = 0;
      for(int i =1;i<=n;i++)
      {
           ret += H[ sum[i] - k ];
           H[sum[i]]++;
      }
      return ret;
}

