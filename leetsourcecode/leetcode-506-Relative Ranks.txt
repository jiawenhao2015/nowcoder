#include<iostream>
#include<algorithm>
#include<vector>
#include<map>
#include <stdlib.h>
#include <stdio.h>
using namespace std;
/*leetcode-506-Relative Ranks
Given scores of N athletes, find their relative ranks and the people with the top three highest scores, who will be awarded medals:
"Gold Medal", "Silver Medal" and "Bronze Medal".
Example 1:
Input: [5, 4, 3, 2, 1]
Output: ["Gold Medal", "Silver Medal", "Bronze Medal", "4", "5"]
Explanation: The first three athletes got the top three highest scores, so they got "Gold Medal", "Silver Medal" and "Bronze Medal".
For the left two athletes, you just need to output their relative ranks according to their scores.
Note:
N is a positive integer and won't exceed 10,000.
All the scores of athletes are guaranteed to be unique.*/
//思路：首先排序，然后用map存储对应名词
 vector<string> findRelativeRanks(vector<int>& nums)
 {
     vector<int>backup = nums;
     vector<string>result;
     if(nums.size()==0)return result;
     sort(nums.begin(),nums.end(),greater<int>());
     map<int,string>table;
     char rank[10];
     for(int i = 0;i < nums.size();i++)
     {
         sprintf(rank,"%d",i+1);
         if(i == 0)table[nums[i]]="Gold Medal";
         else if(i == 1)table[nums[i]]="Silver Medal";
         else if(i == 2)table[nums[i]]="Bronze Medal";
         else  table[nums[i]] = rank;
     }
     result.push_back(table[backup[0]]);
     for(int i =1;i<nums.size();i++)
     {
                 result.push_back(table[backup[i]]);
     }
     return result;
}
int main()
{
    vector<int> nums(5,0);
    nums[0] = 1,nums[1] = 4,nums[2] = 9,nums[3] = 0,nums[4] = 7;
    vector<string> res;
    res = findRelativeRanks(nums);
    for(int i =0 ;i<res.size();i++)
        cout<<res[i];

return 0;
}

