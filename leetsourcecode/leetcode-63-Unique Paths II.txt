/*leetcode-63-Unique Paths II
	Follow up for "Unique Paths":
	Now consider if some obstacles are added to the grids. How many unique paths would there be?
	An obstacle and empty space is marked as 1 and 0 respectively in the grid.
	For example,
	There is one obstacle in the middle of a 3x3 grid as illustrated below.
	[
		[0,0,0],
		[0,1,0],
		[0,0,0]
	][[0,0,0],[0,1,0],[0,0,0]]
	The total number of unique paths is 2.*/
	int uniquePathsWithObstacles(vector<vector<int>>& grid)
	{
		//类似没有障碍的方法：将有障碍的地方置为0；
		if (grid.empty())return 0;
		int row = grid.size();
		int col = grid[0].size();
		if (grid[0][0] == 1)return 0;
		
		for (int i = 0; i < col;i++)//处理第一行
		{
			if (grid[0][i] == 0)grid[0][i] = 1;			
			else if (grid[0][i] == 1)
			{
				for (int j = i; j < col; j++)
					grid[0][j] = 0;//i之后都置为0;
				i = col;
			}				
		}
		for (int i = 1; i < row; i++)//处理第一列
		{
			if (grid[i][0] == 0)grid[i][0] = 1;
			else if (grid[i][0] == 1)
			{
				for (int j = i; j < row; j++)
					grid[j][0] = 0;//i之后都置为0;
				i = row;
			}
		}
		for (int i = 1; i < row; i++)
		{
			for (int j = 1; j < col; j++)
			{
				if (grid[i][j] == 0)//不是障碍
				{								
					grid[i][j] = grid[i - 1][j] + grid[i][j - 1];					
				}
				else if(grid[i][j] == 1)grid[i][j] = 0;
			}
		}
		return grid[row - 1][col - 1];
	}