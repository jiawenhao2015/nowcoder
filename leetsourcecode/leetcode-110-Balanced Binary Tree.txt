/*leetcode-110-Balanced Binary Tree
	Given a binary tree, determine if it is height-balanced.
	For this problem, a height-balanced binary tree is defined as a binary tree 
	in which the depth of the two subtrees of every node never differ by more than 1.*/
	int depthOfTree(TreeNode* root)
	{
		if (root == NULL) return 0;
		int left = depthOfTree(root->left);
		int right = depthOfTree(root->right);
		return 1 + max(left, right);
	}
	bool isBalanced(TreeNode* root)
	{
		if (root == NULL) return true;
		
		int left = depthOfTree(root->left);
		int right= depthOfTree(root->right);
		if (abs(left - right) > 1) return false;
		return isBalanced(root->left) && isBalanced(root->right);
	}