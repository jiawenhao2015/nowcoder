/*leetcode-500-Keyboard Row
     Given a List of words, return the words that can be typed using letters 
     of alphabet on only one row's of American keyboard like the image below.Example 1:
     Input: ["Hello", "Alaska", "Dad", "Peace"]
     Output: ["Alaska", "Dad"]
     Note:
     You may use one character in the keyboard more than once.
     You may assume the input string will only contain letters of alphabet.*/
    
     bool can(string str, vector<unordered_set<char>>& rows)
     {       
         int row = 0;
         for (int k = 0; k<3; ++k)
         {
             if (rows[k].count((char)tolower(str[0])) > 0) row = k;
         }
         for (int i = 1;i<str.size();i++)
         {  
             if (rows[row].count((char)tolower(str[i])) == 0) return false;
         }
         return true;
     }
     vector<string> findWords(vector<string>& words)
     {
         vector<string> ret;
         unordered_set<char> row1{ 'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p' };
         unordered_set<char> row2{ 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l' };
         unordered_set<char> row3{ 'z', 'x', 'c', 'v', 'b', 'n', 'm' };

         vector<unordered_set<char>> rows{ row1, row2, row3 };
         for(int i = 0; i < words.size();i++)
         {
             if (can(words[i], rows))
             {
                 ret.push_back(words[i]);
             }
         }
         return ret;
     }