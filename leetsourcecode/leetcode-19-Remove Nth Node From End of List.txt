/*leetcode-19-Remove Nth Node From End of List
Given a linked list, remove the nth node from the end of list and return its head.
For example,
   Given linked list: 1->2->3->4->5, and n = 2.
   After removing the second node from the end, the linked list becomes 1->2->3->5.
Note:
Given n will always be valid.
Try to do this in one pass.
*/
ListNode* removeNthFromEnd(ListNode* head, int n)
{
    if(head == NULL || n<=0)return head;
    ListNode* dumb = new ListNode(0);
    dumb->next = head;
    ListNode* p = dumb;
    head = dumb;
    while(p !=NULL && n--)
    {
        p = p->next;
    }
    while(p !=NULL && p->next != NULL)
    {
        p = p->next;
        head = head->next;
    }
    if(head->next != NULL) head->next = head->next->next;

    return dumb->next;
}
