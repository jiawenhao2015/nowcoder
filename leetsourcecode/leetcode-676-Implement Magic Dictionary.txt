 map<int,vector<string>>mp;
 
 MagicDictionary()
 {
        mp.clear();
 }
    
    /** Build a dictionary through a list of words */
    void buildDict(vector<string> dict) {
        if(dict.size()==0)return;
    for(auto s:dict)
    {
      mp[s.length()].push_back(s);
    }
    }
    
    /** Returns if there is any word in the trie that equals to the given word after modifying exactly one character */
    bool search(string word) {
        int len = word.length();
    int diff =0;
    if(mp[len].size()==0)return false;
    
    for(int i=0;i<mp[len].size();i++)
    {
      diff==0;
      for(int j =0;j<mp[len][i].length();j++)
      {
        if(word[j]!=mp[len][i][j])diff++;
      }
      if(diff==1 )return true;      
    }
    return false;
    }
