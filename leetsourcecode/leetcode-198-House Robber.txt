/*leetcode-198-House Robber
	You are a professional robber planning to rob houses along a street. 
	Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of 
	them is that adjacent houses have security system connected and it will automatically contact the police
	if two adjacent houses were broken into on the same night.
	Given a list of non-negative integers representing the amount of money of each house, 
	determine the maximum amount of money you can rob tonight without alerting the police.*/
	int rob(vector<int>& nums) 
	{//money[i] = max{money[i-2]+nums[i],money[i-1]}第i个房间有两种可能
		//要么偷，要不不偷，偷的话就是money[i-2]+nums[i] 不偷就是,money[i-1]
		if (nums.empty())return 0;
		if (nums.size() == 1) return nums[0];
		if (nums.size() == 2) return max(nums[0],nums[1]);
		vector<int>money(nums.size());
		money[0] = nums[0];
		money[1] = max(nums[0], nums[1]);
		for (int i = 2; i < nums.size();i++)
		{
			money[i] = max(money[i-2]+nums[i],money[i-1]);
		}
		return money.back();
		
	}