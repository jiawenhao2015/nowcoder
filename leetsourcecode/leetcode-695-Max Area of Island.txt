int a[] = {-1,0,0,1};
 int b[] = {0,1,-1,0};
 void DFS(int m,int n,int curM,int curN,vector<vector<int>>& grid,int &temp,int &ret,vector<vector<bool>>&visited)
 {
   if(curM<0 || curN<0 || curM>=m || curN>=n || visited[curM][curN] || grid[curM][curN] ==0 )return ;
   temp+=1;
   visited[curM][curN] = true;
   for(int i=0;i<4;i++)
   {
     DFS(m,n,curM+a[i],curN+b[i],grid,temp,ret,visited);
  }
   ret = max(temp,ret);   
} 
 int maxAreaOfIsland(vector<vector<int>>& grid)
 {
        int m =grid.size(),n=0;
    if(m!=0)n = grid[0].size();
    vector<vector<bool>>visited(m,vector<bool>(n,false));
    int temp =0,ret =0;
    for(int i=0;i<m;i++)
    {
      for(int j =0;j<n;j++)
      {
        DFS(m,n,i,j,grid,temp,ret,visited);
        temp  = 0;
      }
    }    
    return ret;
 }
