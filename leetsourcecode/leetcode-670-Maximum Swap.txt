vector<int> digits(int num)
{
    if (num == 0)return{0};
    vector<int> ret;    
    while (num > 0)
    {
        ret.push_back(num % 10);
        num /= 10;
    }
    reverse(ret.begin(), ret.end());
    return ret;
}
int toNum(vector<int>num)
{
    int r = 0;
    for (int i = 0; i < num.size();i++)
    {
        r *= 10;
        r += num[i];
    }
    return r;
}
int maximumSwap(int n)
{
    vector<int> num = digits(n);
    int m = n;

    for (int i = 0; i < num.size();i++)
    {
        for (int j = i + 1; j < num.size();j++)
        {
            swap(num[i], num[j]);
            m = max(m, toNum(num));
            swap(num[i], num[j]);
        }
    }
    return m;
}